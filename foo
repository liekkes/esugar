-file("src/esugar_do_transform_tests.erl", 1).

-module(esugar_do_transform_tests).

-compile([]).

-export([safe_muldiv/2]).

safe_muldiv(First, Second) ->
    fun () ->
	    esugar_do_transform_error:'>>='(case is_integer(First)
						of
					      true ->
						  esugar_do_transform_error:return(next);
					      false ->
						  esugar_do_transform_error:fail("First must be an integer!")
					    end,
					    fun (_) ->
						    esugar_do_transform_error:'>>='(case
										      is_integer(Second)
											of
										      true ->
											  esugar_do_transform_error:return(next);
										      false ->
											  esugar_do_transform_error:fail("Second must be an integer!")
										    end,
										    fun
										      (_) ->
											  Product =
											      First
												*
												Second,
											  esugar_do_transform_error:'>>='(case
															    Second
															      =/=
															      0
															      of
															    true ->
																esugar_do_transform_error:return(next);
															    false ->
																esugar_do_transform_error:fail("Second must not be zero!")
															  end,
															  fun
															    (_) ->
																Quotient =
																    First
																      div
																      Second,
																esugar_do_transform_error:return({Product,
																				  Quotient})
															  end)
										    end)
					    end)
    end().

